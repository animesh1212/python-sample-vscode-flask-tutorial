# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '2b4849af-8b12-4dc1-b5a6-f687eb90f32d'
  
  # Web app name
  webAppName: 'pvsd'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'pvsd'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  
  # Python version: 3.7
  pythonVersion: '3.7'

jobs:
- deployment: DeploymentJob
  environment: $(environmentName)
pool:
  vmImage: $(vmImageName)


  strategy:
    runOnce:
      deploy:
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(pythonVersion)'
            displayName: 'Use Python $(pythonVersion)'
        - script: |
            python -m venv antenv
            source antenv/bin/activate
            python -m pip install --upgrade pip
            pip install setup
            pip install -r requirements.txt
          workingDirectory: $(projectRoot)
          displayName: "Install requirements"

        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(pythonVersion)'
          displayName: 'Use Python version'

      - script: |
          python3.6 -m venv .env
          source .env/bin/activate
          pip3.6 install setuptools
          pip3.6 install -r requirements.txt

        # The displayName shows in the pipeline UI when a build runs
        displayName: 'Install dependencies on build agent'

      - script: |
          # Put commands to run tests here
        displayName: 'Run tests'

      - script: |
          echo Deleting .env
          deactivate
          rm -rf .env
        displayName: 'Remove .env before zip'

        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(Build.SourcesDirectory)'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
            replaceExistingArchive: true
            verbose: # (no value); this input is optional
        - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
          displayName: 'Upload package'
          artifact: drop


        - task: AzureWebApp@1
          displayName: 'Deploy Azure Web App : {{ webAppName }}'
          inputs:
            azureSubscription: $(azureServiceConnectionId)
            appName: $(webAppName)
            package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

            # The following parameter is specific to the Flask example code. You may
            # or may not need a startup command for your app.

            startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'
